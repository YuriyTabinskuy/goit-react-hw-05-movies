{"version":3,"file":"static/js/415.af2f66b4.chunk.js","mappings":"6MAOaA,EAAa,SAAHC,GAAoB,IAAdC,EAAMD,EAANC,OACrBC,GAAWC,EAAAA,EAAAA,MAEXC,EAAY,SAAAC,GAChB,MAA0B,YAAtBH,EAASI,SACL,GAANC,OAAUF,GAGN,UAANE,OAAiBF,EACnB,EAEA,OACEG,EAAAA,EAAAA,KAACC,EAAAA,GAAI,CAAAC,SACFT,EAAOU,KAAI,SAAAC,GAAA,IAAGP,EAAEO,EAAFP,GAAIQ,EAAKD,EAALC,MAAOC,EAAWF,EAAXE,YAAW,OACnCN,EAAAA,EAAAA,KAACO,EAAAA,GAAQ,CAAAL,UACPM,EAAAA,EAAAA,MAACC,EAAAA,GAAI,CAACC,GAAId,EAAUC,GAAKc,MAAO,CAAEC,KAAMlB,GAAWQ,SAAA,EACjDF,EAAAA,EAAAA,KAAA,OACEa,IACEP,EAAW,kCAAAP,OAC2BO,GAClC,2IAENQ,IAAKT,KAEPL,EAAAA,EAAAA,KAACe,EAAAA,GAAU,CAAAb,SAAEG,QAVFR,EAYJ,KAInB,C,iKC/Be,SAASmB,IACtB,IAAAC,GAA4CC,EAAAA,EAAAA,UAAS,IAAGC,GAAAC,EAAAA,EAAAA,GAAAH,EAAA,GAAjDI,EAAcF,EAAA,GAAEG,EAAiBH,EAAA,GACxCI,GAAkCL,EAAAA,EAAAA,WAAS,GAAMM,GAAAJ,EAAAA,EAAAA,GAAAG,EAAA,GAA1CE,EAASD,EAAA,GAAEE,EAAYF,EAAA,GAC9BG,GAA0BT,EAAAA,EAAAA,UAAS,MAAKU,GAAAR,EAAAA,EAAAA,GAAAO,EAAA,GAAjCE,EAAKD,EAAA,GAAEE,EAAQF,EAAA,GAqBtB,OAnBAG,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAmB,eAAAxC,GAAAyC,EAAAA,EAAAA,GAAAC,IAAAA,MAAG,SAAAC,IAAA,IAAAC,EAAA,OAAAF,IAAAA,MAAA,SAAAG,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,OAGT,OAHSF,EAAAC,KAAA,EAExBZ,GAAa,GACbI,EAAS,MAAMO,EAAAE,KAAA,GAEkBC,EAAAA,EAAAA,MAAoB,KAAD,EAA9CJ,EAAkBC,EAAAI,KAExBnB,EAAkBc,GAAoBC,EAAAE,KAAA,gBAAAF,EAAAC,KAAA,EAAAD,EAAAK,GAAAL,EAAA,SAEtCP,EAASO,EAAAK,GAAMC,SAAS,QAEJ,OAFIN,EAAAC,KAAA,GAExBZ,GAAa,GAAOW,EAAAO,OAAA,6BAAAP,EAAAQ,OAAA,GAAAV,EAAA,wBAEvB,kBAbwB,OAAA3C,EAAAsD,MAAA,KAAAC,UAAA,KAezBf,GACF,GAAG,KAGDxB,EAAAA,EAAAA,MAAAwC,EAAAA,SAAA,CAAA9C,SAAA,EACEF,EAAAA,EAAAA,KAACiD,EAAAA,GAAK,CAAA/C,SAAC,mBACNuB,IAAazB,EAAAA,EAAAA,KAACkD,EAAAA,EAAM,IACpBrB,IAASrB,EAAAA,EAAAA,MAAA,KAAAN,SAAA,CAAI2B,EAAM,QAClBJ,GAAaJ,EAAe8B,OAAS,IACrCnD,EAAAA,EAAAA,KAACT,EAAAA,EAAU,CAACE,OAAQ4B,MAI5B,C","sources":["components/MoviesList/MoviesList.jsx","pages/Home.jsx"],"sourcesContent":["import {\n  Grid,\n  GridItem,\n  MovieTitle,\n} from 'components/MoviesList/MoviesList.styled';\nimport { Link, useLocation } from 'react-router-dom';\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n\n  const selectUrl = id => {\n    if (location.pathname === '/movies') {\n      return `${id}`;\n    }\n\n    return `movies/${id}`;\n  };\n\n  return (\n    <Grid>\n      {movies.map(({ id, title, poster_path }) => (\n        <GridItem key={id}>\n          <Link to={selectUrl(id)} state={{ from: location }}>\n            <img\n              src={\n                poster_path\n                  ? `https://image.tmdb.org/t/p/w500${poster_path}`\n                  : 'https://images.squarespace-cdn.com/content/v1/5a79de08aeb625f12ad4f85a/1527015265032-KYY1AQ4NCW6NB7BK1NDH/placeholder-image-vertical.png'\n              }\n              alt={title}\n            />\n            <MovieTitle>{title}</MovieTitle>\n          </Link>\n        </GridItem>\n      ))}\n    </Grid>\n  );\n};\n","import { Loader } from 'components/Loader/Loader';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport { Title } from 'components/MoviesList/MoviesList.styled';\nimport { useEffect, useState } from 'react';\nimport { getTrendingMovies } from 'services/api';\n\nexport default function Home() {\n  const [trendingMovies, setTrendingMovies] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    const fetchTrendingMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n\n        const trendingMoviesData = await getTrendingMovies();\n\n        setTrendingMovies(trendingMoviesData);\n      } catch (error) {\n        setError(error.message);\n      } finally {\n        setIsLoading(false);\n      }\n    };\n\n    fetchTrendingMovies();\n  }, []);\n\n  return (\n    <>\n      <Title>Trending today</Title>\n      {isLoading && <Loader />}\n      {error && <p>{error} </p>}\n      {!isLoading && trendingMovies.length > 0 && (\n        <MoviesList movies={trendingMovies} />\n      )}\n    </>\n  );\n}\n"],"names":["MoviesList","_ref","movies","location","useLocation","selectUrl","id","pathname","concat","_jsx","Grid","children","map","_ref2","title","poster_path","GridItem","_jsxs","Link","to","state","from","src","alt","MovieTitle","Home","_useState","useState","_useState2","_slicedToArray","trendingMovies","setTrendingMovies","_useState3","_useState4","isLoading","setIsLoading","_useState5","_useState6","error","setError","useEffect","fetchTrendingMovies","_asyncToGenerator","_regeneratorRuntime","_callee","trendingMoviesData","_context","prev","next","getTrendingMovies","sent","t0","message","finish","stop","apply","arguments","_Fragment","Title","Loader","length"],"sourceRoot":""}